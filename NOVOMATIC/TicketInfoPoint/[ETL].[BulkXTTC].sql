/*
SET NOCOUNT ON;

DECLARE 
		@XTTC XML -- VUOTO
		,@INPUTttc ETL.TTC_TYPE

-- RIEMPIMENTO OGGETTO DI TIPO "ETL.TTC_TYPE"
INSERT	@INPUTttc -- (ticketcode, flagcalc, sessionid, sessionparentid, level) -- * ELENCO PARAMETRI OPZIONALE *
VALUES	
		 ('391378593917118854', 0, 1234, 1233, 1)	
		,('391378593917118855', 1, 12345, 12344, 2)
		,('391378593917118856', 0, 123456, 123455, 3)
		,('391378593917118857', 1, 1234567, 1234566, 3)

-- BULK LOAD IN UNA VARIABILE XML (CONTENITORE) DA OGGETTO DI TIPO "ETL.TTC_TYPE"
SET	@XTTC = ETL.BulkXTTC(@XTTC, @INPUTttc) -- RIEMPIE IL CONTENITORE XML CON I DATI PRESENTI NELL'OGGETTO DI TIPO "ETL.TTC_TYPE", RITORNA UNA VARIABILE XML CONTENENTE TUTTE LE COLONNE PRESENTI NELL'OGGETTO IN INGRESSO (@INPUTttc = ETL.TTC_TYPE)

SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, NULL, NULL, NULL, NULL) -- RITORNA L'ELENCO COMPLETO IN FORMA TABELLARE
SELECT * FROM ETL.GetXTTC(@XTTC, NULL, '391378593917118856', NULL, NULL, NULL, NULL) -- RITORNA SOLO LE RIGHE AVENTI IL TICKETCODE CORRISPONDENTE A '391378593917118856'  (1 RIGA RITORNATA)
SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, 1, NULL, NULL, NULL) -- RITORNA SOLO LE RIGHE AVENTI IL FLAGCALC CORRISPONDENTE A 1 (2 RIGHE RITORNATE)
SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, NULL, 1234567, NULL, NULL) -- RITORNA SOLO LE RIGHE AVENTI IL SESSIONID CORRISPONDENTE A 1234567 (1 RIGA RITORNATA)
SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, NULL, NULL, 1233, NULL) -- RITORNA SOLO LE RIGHE AVENTI IL SESSIONPARENTID CORRISPONDENTE A 1233 (1 RIGA RITORNATA)
SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, NULL, NULL, NULL, 3) -- RITORNA SOLO LE RIGHE AVENTI IL LEVEL CORRISPONDENTE A 3 (2 RIGHE RITORNATE)
SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, 0, NULL, NULL, 3) -- RITORNA SOLO LE RIGHE AVENTI IL FLAGCALC CORRISPONDENTE A 1 E IL LEVEL CORRISPONDENTE A 3 (1 RIGA RITORNATA)

SELECT * FROM ETL.GetXTTC(@XTTC, NULL, NULL, NULL, NULL, NULL, NULL) FOR XML PATH('TTC'), ROOT('ROWS'), TYPE -- RITORNA L'ELENCO COMPLETO IN FORMA XML

*/
ALTER FUNCTION [ETL].[BulkXTTC]
				(
					@XMLttc XML
					,@INPUTttc ETL.TTC_TYPE READONLY
				)
RETURNS XML
AS
BEGIN
	DECLARE 
			@returnXTTC XML = NULL
			,@outputTTC ETL.TTC_TYPE
			,@lastID int

	IF EXISTS (SELECT TOP 1 * FROM @INPUTttc)
		BEGIN
			INSERT 	@outputTTC
					(
						ticketcode 
						,flagcalc 
						,sessionid 
						,sessionparentid 
						,level
					) 
			SELECT
					ticketcode 
					,flagcalc 
					,sessionid 
					,sessionparentid 
					,level
			FROM	ETL.GetXTTC(@XMLttc, NULL, NULL, NULL, NULL, NULL, NULL)
			UNION ALL
			SELECT	
					ticketcode 
					,flagcalc 
					,sessionid 
					,sessionparentid 
					,level
			FROM	@INPUTttc
		END

	SET @returnXTTC =
		(
				SELECT 	
						id							
						,ticketcode 
						,flagcalc 
						,sessionid 
						,sessionparentid 
						,level
				FROM	@outputTTC 
				FOR XML RAW('TTC'), TYPE
		)
	RETURN  @returnXTTC
END